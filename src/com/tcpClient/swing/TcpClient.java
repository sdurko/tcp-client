/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tcpClient.swing;

import java.time.LocalDateTime;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import com.tcpClient.connection.ConnectionService;
import com.tcpClient.messaging.service.SendMessage;
import com.tcpClient.services.DialogService;
import com.tcpClient.services.MessageDialogService;
import com.tcpClient.services.PopupService;
import com.tcpClient.services.ValidationService;
import java.nio.file.Paths;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * @author cis
 */
public class TcpClient extends javax.swing.JFrame {

    /**
     * Status of connection for application.
     */
    public enum connetionStatus {CONNECTED, DISCONNECTED};    
    private DetailPanel detailPanel;
    private DialogService dialogService = new DialogService();
    private static ConnectionService connectionService = new ConnectionService();
    private MessageDialogService messageDialogService = new MessageDialogService();
    private static DefaultTableModel messageTableModel;
    private static DefaultTableModel errorTableModel;
    private ValidationService validationService = new ValidationService();
    private PopupService popUp = new PopupService();
    public static JFrame frame;
    private final FileNameExtensionFilter FILE_FILTER = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
    private static SendMessage sendMessage= new SendMessage();
    private JFileChooser fileChooser = new JFileChooser();

    /**
     * Creates new form TcpClient
     */
    public TcpClient() {
        frame = this;
        initComponents();
        messageTableModel = (DefaultTableModel) ReceiveMessageTable.getModel();
        errorTableModel = (DefaultTableModel) errorMessageTable.getModel();
        fileChooser.setFileFilter(FILE_FILTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        message = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        filePath = new javax.swing.JTextField();
        browswButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        delayjSpinner = new javax.swing.JSpinner();
        calcelButtonForFileChooser = new javax.swing.JButton();
        send = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ReceiveMessageTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        errorMessageTable = new javax.swing.JTable();
        connectionDetailPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        connectionStatus = new javax.swing.JLabel();
        connectionButton = new javax.swing.JButton();
        ipTextField = new javax.swing.JTextField();
        portTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tcp Client");

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setToolTipText("Send");

        message.setColumns(20);
        message.setRows(5);
        jScrollPane1.setViewportView(message);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Send Multiple"));
        jPanel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        filePath.setEditable(false);

        browswButton.setText("Browse");
        browswButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browswButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("File name :");

        jLabel5.setText("Delay between messages (sec.) :");

        delayjSpinner.setModel(new javax.swing.SpinnerNumberModel(3, 3, 60, 1));

        calcelButtonForFileChooser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelFile.png"))); // NOI18N
        calcelButtonForFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcelButtonForFileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delayjSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(filePath, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calcelButtonForFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(browswButton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 13, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(filePath, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(calcelButtonForFileChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(browswButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delayjSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        send.setText("Send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Send", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        ReceiveMessageTable.setAutoCreateRowSorter(true);
        ReceiveMessageTable.setBackground(java.awt.Color.black);
        ReceiveMessageTable.setForeground(java.awt.Color.green);
        ReceiveMessageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr No.", "Message", "Sender", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ReceiveMessageTable.setFocusable(false);
        ReceiveMessageTable.setGridColor(java.awt.Color.white);
        ReceiveMessageTable.setIntercellSpacing(new java.awt.Dimension(5, 5));
        ReceiveMessageTable.setRowHeight(20);
        ReceiveMessageTable.setSelectionForeground(java.awt.Color.black);
        ReceiveMessageTable.setSurrendersFocusOnKeystroke(true);
        ReceiveMessageTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReceiveMessageTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ReceiveMessageTable);
        if (ReceiveMessageTable.getColumnModel().getColumnCount() > 0) {
            ReceiveMessageTable.getColumnModel().getColumn(0).setPreferredWidth(15);
            ReceiveMessageTable.getColumnModel().getColumn(1).setResizable(false);
            ReceiveMessageTable.getColumnModel().getColumn(2).setResizable(false);
            ReceiveMessageTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 874, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Receive", jPanel3);

        errorMessageTable.setBackground(new java.awt.Color(16, 6, 6));
        errorMessageTable.setForeground(java.awt.Color.red);
        errorMessageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr No.", "Error Message", "DateTime"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        errorMessageTable.setGridColor(java.awt.Color.white);
        errorMessageTable.setRowHeight(20);
        errorMessageTable.setRowMargin(5);
        errorMessageTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                errorMessageTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(errorMessageTable);
        errorMessageTable.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Errors", jPanel4);

        connectionDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Connection"));

        jLabel1.setText("IP Address :");

        jLabel2.setText("Port No. :");

        jLabel8.setText("Status :");

        connectionStatus.setText("DISCONNECTED");

        connectionButton.setText("Connect");
        connectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectionButtonActionPerformed(evt);
            }
        });

        ipTextField.setText("localhost");

        portTextField.setText("2001");

        javax.swing.GroupLayout connectionDetailPanelLayout = new javax.swing.GroupLayout(connectionDetailPanel);
        connectionDetailPanel.setLayout(connectionDetailPanelLayout);
        connectionDetailPanelLayout.setHorizontalGroup(
            connectionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectionDetailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addComponent(ipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(3, 3, 3)
                .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connectionStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(connectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        connectionDetailPanelLayout.setVerticalGroup(
            connectionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, connectionDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(connectionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addComponent(jLabel2)
                .addComponent(connectionStatus)
                .addComponent(jLabel8)
                .addComponent(ipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(connectionDetailPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(connectionDetailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ReceiveMessageTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReceiveMessageTableMouseClicked
    int row = ReceiveMessageTable.getSelectedRow();
    detailPanel= new DetailPanel((String)ReceiveMessageTable.getValueAt(row, 1),(String)ReceiveMessageTable.getValueAt(row, 2),(LocalDateTime)ReceiveMessageTable.getValueAt(row, 3));
    dialogService.createDilog(this, "Message Detail", detailPanel);
    dialogService.setVisible(true);
    }//GEN-LAST:event_ReceiveMessageTableMouseClicked

    private void connectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectionButtonActionPerformed
        if("Connect".equals(connectionButton.getText())){
            String ipAddress = ipTextField.getText().trim();
            String portNo = portTextField.getText().trim();
            if (ipAddress.isEmpty() || portNo.isEmpty()) {
            messageDialogService.showError(this,"Please check IP or port is empty.!!");
            } else if(!validationService.validatePort(portNo)){
                messageDialogService.showError(this, "Invalid port Number.!!");
            }else {
                Boolean isConnected = connectionService.createConnection(ipAddress, Integer.parseInt(portNo));
                if(!isConnected){
                    messageDialogService.showError(this, "Please check IP or Port is wrong.!!");
                }else{
                    connectionService.startReciver();
                }
            }
        }else{
           connectionService.disconect();
           connectionService.stopReciver();
          
        }
        updateConnectionWindow();
    }//GEN-LAST:event_connectionButtonActionPerformed

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        if(connectionService.isConnected()){
            if(!filePath.getText().isEmpty() && fileChooser.getSelectedFile() != null){
               sendMessageFromFile();
            }else{
                 if(!message.getText().isEmpty()){
                    if(sendMessage.sendMessage(message.getText())){
                        message.setText("");
                        filePath.setText("");
                    }
                }else{
                    messageDialogService.showError(this, "Con't send empty message..!!");
                }
            }
        }else{
            messageDialogService.showError(this, "Please connect application first..!!");
        }
    }//GEN-LAST:event_sendActionPerformed

    private void browswButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browswButtonActionPerformed
        fileChooser.setVisible(true);
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            filePath.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_browswButtonActionPerformed

    private void calcelButtonForFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcelButtonForFileChooserActionPerformed
        filePath.setText("");
    }//GEN-LAST:event_calcelButtonForFileChooserActionPerformed

    private void errorMessageTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_errorMessageTableMouseClicked
        int row = errorMessageTable.getSelectedRow();
        detailPanel= new DetailPanel((String)errorMessageTable.getValueAt(row, 1), null, (LocalDateTime)errorMessageTable.getValueAt(row, 2));
        dialogService.createDilog(this, "Message Detail", detailPanel);
        dialogService.setVisible(true);
    }//GEN-LAST:event_errorMessageTableMouseClicked

    /**
     * To update connection window according current connection status.
    */
    public static void updateConnectionWindow(){
        if(connectionService.isConnected()){
            connectionStatus.setText("CONNECTED");
            connectionButton.setText("Disconnect");
            ipTextField.setEditable(false);
            portTextField.setEditable(false);
        }else{
            connectionStatus.setText("DISCONNECTED");
            connectionButton.setText("Connect");
            ipTextField.setEditable(true);
            portTextField.setEditable(true);
            clearTables();
        }
    }

    /**
     * This method used to remove all rows of message and error table.
    */
    private static void clearTables(){
        messageTableModel.getDataVector().removeAllElements();
        messageTableModel.fireTableDataChanged();
        errorTableModel.getDataVector().removeAllElements();
        errorTableModel.fireTableDataChanged();
    }

    private void sendMessageFromFile(){ 
        if((Integer)delayjSpinner.getValue() != null){
                    if(validationService.isValidateNumber(delayjSpinner.getValue().toString()) && (Integer)delayjSpinner.getValue() > 0){
                        if(sendMessage.sendMessage(Paths.get(fileChooser.getSelectedFile().getAbsolutePath()),message.getText(),(Integer)delayjSpinner.getValue())){
                            message.setText("");
                            filePath.setText("");
                        }
                    }else{
                        messageDialogService.showError(this, "Invalid number in delay field..!!");
                    }
                }else{
                    messageDialogService.showError(this, "Please select time delay..!!");                        
                }}
    /**
     * This method used to add row in message table.
    */
    public static void addRowInMassageTable(String Message){
        messageTableModel.addRow(new Object[]{messageTableModel.getRowCount()+1,Message,"localhost",LocalDateTime.now()});
    }

    /**
     * This method used to add row in error table.
    */
    public static void addRowInErrorTable(String Message){
        errorTableModel.addRow(new Object[]{errorTableModel.getRowCount()+1,Message,LocalDateTime.now()});
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TcpClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TcpClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TcpClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TcpClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TcpClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ReceiveMessageTable;
    private javax.swing.JButton browswButton;
    private javax.swing.JButton calcelButtonForFileChooser;
    private static javax.swing.JButton connectionButton;
    private static javax.swing.JPanel connectionDetailPanel;
    private static javax.swing.JLabel connectionStatus;
    private javax.swing.JSpinner delayjSpinner;
    private javax.swing.JTable errorMessageTable;
    private javax.swing.JTextField filePath;
    private static javax.swing.JTextField ipTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea message;
    private static javax.swing.JTextField portTextField;
    private javax.swing.JButton send;
    // End of variables declaration//GEN-END:variables
}
